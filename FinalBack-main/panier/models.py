from django.utils.crypto import get_random_string

from partners.models import Partners
from products.models import ProductTemplate, ProductUOM, ProductPackaging
from django.db import models

from users.models import User


class ProductProduct(models.Model):
    id = models.AutoField(primary_key=True)
    ean13 = models.CharField(max_length=13, null=True)
    create_date = models.DateTimeField(null=True)
    default_code = models.CharField(max_length=255, null=True)
    name_template = models.CharField(max_length=255, null=True)
    create_uid = models.IntegerField(null=True)
    message_last_post = models.DateTimeField(null=True)
    product_tmpl_id = models.ForeignKey(ProductTemplate, on_delete=models.CASCADE, null=True)
    image_variant = models.BinaryField(null=True)
    write_uid = models.IntegerField(null=True)
    write_date = models.DateTimeField(null=True)
    active = models.BooleanField(null=True)
    lst_price = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    code_wavesoft = models.CharField(max_length=255, null=True)
    prefix_ff = models.CharField(max_length=10, null=True)
    type_stock = models.CharField(max_length=255, null=True)
    prefix_7_income = models.CharField(max_length=3, null=True)
    prefix_category = models.CharField(max_length=255, null=True)
    prefix_38 = models.CharField(max_length=3, null=True)
    prefix_gf = models.CharField(max_length=2, null=True)
    prefix_3_s = models.CharField(max_length=3, null=True)
    prefix_3 = models.CharField(max_length=3, null=True)
    prefix_6_variation = models.CharField(max_length=3, null=True)
    prefix_38_imp = models.CharField(max_length=1, null=True)
    prefix_38_inter = models.CharField(max_length=1, null=True)
    prefix_6_expense = models.CharField(max_length=3, null=True)
    prefix_al = models.CharField(max_length=8, null=True)
    prefix_38_local = models.CharField(max_length=1, null=True)
class SaleOrder(models.Model):
    id = models.AutoField(primary_key=True)
    origin = models.CharField(max_length=64, null=True)
    create_date = models.DateTimeField(auto_now_add=True, null=True)
    write_uid = models.ForeignKey(User, on_delete=models.CASCADE, null=True, related_name='write_uid_sale_orders')
    client_order_ref = models.CharField(max_length=64, null=True)
    date_order = models.DateTimeField(auto_now_add=True, null=True)
    partner_id = models.ForeignKey(Partners, on_delete=models.CASCADE, null=True, default=6)
    amount_tax = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    procurement_group_id = models.IntegerField(null=True)
    fiscal_position = models.IntegerField(null=True)
    amount_untaxed = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    payment_term = models.IntegerField(null=True)
    message_last_post = models.DateTimeField(null=True)
    company_id = models.IntegerField(null=True, default=8)
    note = models.TextField(null=True)
    state = models.CharField(max_length=64, null=True, default='draft')
    pricelist_id = models.IntegerField(null=True)
    create_uid = models.IntegerField(null=True)
    section_id = models.IntegerField(null=True)
    section_id = models.IntegerField(null=True)
    write_date = models.DateTimeField(auto_now_add=True, null=True)
    partner_invoice_id = models.IntegerField(null=True)
    user_id = models.IntegerField(null=True)
    date_confirm = models.DateField(null=True)
    amount_total = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    project_id = models.IntegerField(null=True)
    name = models.CharField(max_length=255, unique=True)
    partner_shipping_id = models.IntegerField(null=True)
    order_policy = models.CharField(max_length=64)
    campaign_id = models.IntegerField(null=True)
    medium_id = models.IntegerField(null=True)
    source_id = models.IntegerField(null=True)
    crm_project_id = models.IntegerField(null=True)
    fiscal_stamp_amount = models.DecimalField(max_digits=10, decimal_places=2, null=True, default=0)
    fiscal_stamp = models.BooleanField(null=True, default=False)
    date_validite = models.DateField(null=True)
    _ruid = models.CharField(max_length=64, null=True)
    parent_partner_id = models.IntegerField(null=True)
    company_parent_id = models.IntegerField(null=True, default=8)
    picking_policy = models.CharField(max_length=64)
    incoterm = models.IntegerField(null=True)
    warehouse_id = models.IntegerField(null=True)
    shipped = models.BooleanField(null=True, default=False)
    condition_livraison_id = models.IntegerField(null=True)
    payment_on_picking = models.BooleanField(null=True)
    journal_id = models.IntegerField(null=True)
    matricule = models.CharField(max_length=64, null=True)
    date_out = models.DateField(null=True)
    date_in = models.DateField(null=True)
    driver = models.CharField(max_length=64, null=True)
    transporter = models.CharField(max_length=64, null=True)
    matricule_remorque = models.CharField(max_length=64, null=True)
    enlevement = models.CharField(max_length=64, null=True)
    particular_conditions = models.TextField(null=True)
    contract_ref = models.CharField(max_length=64, null=True)
    is_contract = models.BooleanField(null=True)
    payment_methode = models.CharField(max_length=64, null=True)
    is_convention = models.BooleanField(null=True)
    payment_modality_id = models.IntegerField(null=True)
    bank_id = models.IntegerField(null=True)
    payment_reference = models.CharField(max_length=64, null=True)
    user_partner = models.ForeignKey(User, on_delete=models.CASCADE, null=True, default=2,related_name='user_partner_sale_orders')

    def save(self, *args, **kwargs):
        if not self.name:
            # Generate a structured unique name if it doesn't exist
            prefix = 'EC'  # Example prefix
            random_string = get_random_string(length=6)  # Example random string
            self.name = f"{prefix}-{random_string}"

        super().save(*args, **kwargs)
class SaleOrderLine(models.Model):
    id = models.AutoField(primary_key=True)
    product_uos_qty = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    create_date = models.DateTimeField(null=True, auto_now_add=True)
    product_uom = models.ForeignKey(ProductUOM, on_delete=models.CASCADE, null=True, default=1)
    sequence = models.IntegerField(null=True)
    price_unit = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    product_uom_qty = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    write_uid = models.IntegerField(null=True)
    product_uos = models.IntegerField(null=True)
    invoiced = models.BooleanField(null=True)
    create_uid = models.IntegerField(null=True)
    company_id = models.IntegerField(null=True, default=8)
    name = models.TextField(null=True)
    delay = models.FloatField(null=True)
    state = models.CharField(max_length=256, default='draft', null=True)
    order_partner_id = models.ForeignKey(Partners, on_delete=models.CASCADE, null=True, default=6)
    order_id = models.ForeignKey(SaleOrder, on_delete=models.CASCADE, null=True, default=3)
    discount = models.DecimalField(max_digits=10, decimal_places=2, null=True, default=0)
    write_date = models.DateTimeField(null=True)
    product_id = models.ForeignKey(ProductProduct, on_delete=models.CASCADE, null=True, default=6)
    salesman_id = models.IntegerField(null=True)
    th_weight = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    address_allotment_id = models.IntegerField(null=True)
    qty_conditionnee = models.FloatField(null=True)
    product_packaging = models.ForeignKey(ProductPackaging, on_delete=models.CASCADE, null=True, default=278)
    available = models.BooleanField(null=True)
    kit_line_id = models.IntegerField(null=True)
    order_uom_qty = models.FloatField(null=True)
    order_qty_conditionnee = models.FloatField(null=True)
    _ruid = models.TextField(null=True)
    route_id = models.IntegerField(null=True)
    analytic_account_id = models.IntegerField(null=True)
    epaisseur = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    largeur = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    order_nb_item = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    nb_item = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    longueur = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    crm_project_id = models.IntegerField(null=True)
class ProductAvailability(models.Model):
    id = models.AutoField(primary_key=True)
    state = models.CharField(max_length= 255, null=True)
    default_code = models.CharField(max_length= 255, null=True)
    product_id = models.ForeignKey(ProductProduct,on_delete=models.CASCADE, null=True)
    name_template = models.CharField(max_length= 255, null=True)
    product_category = models.CharField(max_length=255, null=True)
    qty = models.DecimalField(max_digits=10, decimal_places=2, null=True)
    location_id = models.IntegerField(null=True)
    location_name = models.CharField(max_length=255, null=True)
    unit =models.CharField(max_length=255, null=True)
    depot_name = models.CharField(max_length=255, null=True)
class ProductAttributes(models.Model):
    id = models.AutoField(primary_key=True)
    product_id = models.ForeignKey(ProductProduct, on_delete=models.CASCADE, null=True)
    default_code = models.CharField(max_length=255, null=True)
    product_attribute_id = models.IntegerField(null=True)
    product_attribute = models.CharField(max_length=255, null=True)
    product_attribute_value_id = models.IntegerField(null=True)
    product_attribute_value = models.CharField(max_length=255, null=True)